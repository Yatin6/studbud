{"mappings":"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","sources":["public/kanban_Board.js"],"sourcesContent":["var taskList = [];\r\nlet submit = document.querySelectorAll('.submit');\r\nlet tasks = document.querySelector('#tasks');\r\nlet newTask = document.querySelectorAll('.add_Task');\r\nlet newBoard = document.querySelector('#add_Board');\r\nlet singleEle = document.querySelector('.card_Individual_Elements');\r\nlet cardColumnCopy = document.querySelector('.copy');\r\nlet dragTask = null;\r\nlet noWrap = document.querySelector('#no_Wrap');\r\n// Question 1: here, I want to reduce repetitive steps above by function. \r\n// But...the tricky thing is the parameter of the querySelector is a string. \r\n// I don't know how to pass the variable id to it.\r\n\r\n// function getValue(id){\r\n//   return document.querySelector(\"'#\"+id+\"'\");\r\n// }\r\n// let taskName= getValue(Task);\r\n// console.log(taskName);\r\n\r\n// seperae the data from the date input\r\nfunction getDateValue(elements) {\r\n  return elements.value.split(\"-\");\r\n}\r\n\r\n// submit.forEach((item) => {\r\n//   item.addEventListener('click', function (event) {\r\n//     let concealCard = item.parentNode.parentNode.children[1];\r\n//     let taskName = item.parentNode.querySelector('#Task');\r\n//     let dueDate = item.parentNode.querySelector('#Date');\r\n//     let estimateHour = item.parentNode.querySelector('#Hour');\r\n//     let estimateMin = item.parentNode.querySelector('#Minute');\r\n//     let priority = item.parentNode.querySelector('#Priority');\r\n//     let status = item.parentNode.querySelector('#Status');\r\n//     if (taskName.value && dueDate.value && estimateHour.value && estimateMin.value && priority.value && status.value != \"\") {\r\n//       event.preventDefault();\r\n//       let due = getDateValue(dueDate);\r\n//       let year = due[0];\r\n//       let month = due[1];\r\n//       let day = due[2];\r\n//       addTask(taskName.value, year, month, day, estimateHour.value, estimateMin.value, priority.value, status.value);\r\n//       console.log(taskList);\r\n//       let infoFirstRow = concealCard.querySelector('.info_First_Row span');\r\n//       infoFirstRow.innerHTML = taskList[taskList.length - 1].name;\r\n//       let leftWords = concealCard.querySelector('.left span');\r\n//       leftWords.innerHTML = taskList[taskList.length - 1].date.year + \"-\" + taskList[taskList.length - 1].date.month + \"-\" + taskList[taskList.length - 1].date.day;\r\n//       let midWords = concealCard.querySelector('.middle span');\r\n//       midWords.innerHTML = taskList[taskList.length - 1].time.hours + \"h\" + \" \" + taskList[taskList.length - 1].time.minutes + \"min\";\r\n//       let rightWords = concealCard.querySelector('.right span');\r\n//       rightWords.innerHTML = taskList[taskList.length - 1].status;\r\n//       switch (taskList[taskList.length - 1].priority) {\r\n//         case \"High\":\r\n//           concealCard.querySelector('.priority_Circle').style.backgroundColor = \"#DD5454\";\r\n//           break;\r\n//         case \"Medium\":\r\n//           concealCard.querySelector('.priority_Circle').style.backgroundColor = \"#F8DD50\";\r\n//           break;\r\n//         case \"Low\":\r\n//           concealCard.querySelector('.priority_Circle').style.backgroundColor = \"#A3EA6B\";\r\n//       }\r\n\r\n//       item.parentNode.style.display = \"none\";\r\n//       concealCard.style.display = \"block\";\r\n//       item.parentNode.parentNode.children[2].style.display = \"block\";\r\n//     }\r\n//   });\r\n// });\r\n\r\nfunction addTask(name, year, month, day, hours, minutes, priority, status) {\r\n  let newTask = {\r\n    name: name,\r\n    date: {\r\n      year: year,\r\n      month: month,\r\n      day: day\r\n    },\r\n    time: {\r\n      hours: hours,\r\n      minutes: minutes\r\n    },\r\n    priority: priority,\r\n    status: status\r\n  }\r\n  taskList.push(newTask);\r\n}\r\n\r\nnoWrap.addEventListener(\"click\", function (ev) {\r\n  ev = ev || event;\r\n  var target = ev.target || ev.srcElement;\r\n  if (target.className.split(' ').includes('del')) {\r\n    target.parentNode.parentNode.remove();\r\n  } else if (target.className === \"iconfont tick\") {\r\n    console.log(target);\r\n    let concealCard = target.parentNode.parentNode.parentNode.children[1];\r\n    console.log(concealCard);\r\n    let taskName = target.parentNode.parentNode.querySelector('#Task');\r\n    let dueDate = target.parentNode.parentNode.querySelector('#Date');\r\n    let estimateHour = target.parentNode.parentNode.querySelector('#Hour');\r\n    let estimateMin = target.parentNode.parentNode.querySelector('#Minute');\r\n    let priority = target.parentNode.parentNode.querySelector('#Priority');\r\n    let status = target.parentNode.parentNode.querySelector('#Status');\r\n    if (taskName.value && dueDate.value && estimateHour.value && estimateMin.value && priority.value && status.value != \"\") {\r\n      ev.preventDefault();\r\n      let due = getDateValue(dueDate);\r\n      let year = due[0];\r\n      let month = due[1];\r\n      let day = due[2];\r\n      addTask(taskName.value, year, month, day, estimateHour.value, estimateMin.value, priority.value, status.value);\r\n      console.log(taskList);\r\n      let infoFirstRow = concealCard.querySelector('.info_First_Row span');\r\n      infoFirstRow.innerHTML = taskList[taskList.length - 1].name;\r\n      let leftWords = concealCard.querySelector('.left span');\r\n      leftWords.innerHTML = taskList[taskList.length - 1].date.year + \"-\" + taskList[taskList.length - 1].date.month + \"-\" + taskList[taskList.length - 1].date.day;\r\n      let midWords = concealCard.querySelector('.middle span');\r\n      midWords.innerHTML = taskList[taskList.length - 1].time.hours + \"h\" + \" \" + taskList[taskList.length - 1].time.minutes + \"min\";\r\n      let rightWords = concealCard.querySelector('.right span');\r\n      rightWords.innerHTML = taskList[taskList.length - 1].status;\r\n      switch (taskList[taskList.length - 1].priority) {\r\n        case \"High\":\r\n          concealCard.querySelector('.priority_Circle').style.backgroundColor = \"#DD5454\";\r\n          break;\r\n        case \"Medium\":\r\n          concealCard.querySelector('.priority_Circle').style.backgroundColor = \"#F8DD50\";\r\n          break;\r\n        case \"Low\":\r\n          concealCard.querySelector('.priority_Circle').style.backgroundColor = \"#A3EA6B\";\r\n      }\r\n      target.parentNode.parentNode.style.display = \"none\";\r\n      concealCard.style.display = \"block\";\r\n      target.parentNode.parentNode.parentNode.children[2].style.display = \"block\";\r\n    }\r\n  } else if (target.className === \"plus\") {\r\n    target.parentNode.parentNode.style.display = \"none\";\r\n    var cloneCardDiv = singleEle.cloneNode(true);\r\n    target.parentNode.parentNode.parentNode.parentNode.appendChild(cloneCardDiv);\r\n    let newestForm = cloneCardDiv.children[0];\r\n    newestForm.reset();\r\n    newestForm.style.display = \"flex\";\r\n    let newestCard = cloneCardDiv.children[1];\r\n    newestCard.style.display = \"none\";\r\n    let newAdd = cloneCardDiv.children[2];\r\n    newAdd.style.display = \"none\";\r\n  }\r\n});\r\n\r\nfunction redirect(){\r\n  location.replace(\"task.html\");\r\n}\r\n// newTask.forEach((newItem) => {\r\n//   newItem.addEventListener('click', function (event) {\r\n//     newItem.style.display=\"none\";\r\n//     var cloneCardDiv = singleEle.cloneNode(true);\r\n//     newItem.parentNode.parentNode.parentNode.parentNode.appendChild(cloneCardDiv);\r\n//     // let newestForm = cloneCardDiv.children[0];\r\n//     // newestForm.style.display = \"flex\";\r\n//     // let newestCard = cloneCardDiv.children[1];\r\n//     // newestCard.style.display = \"none\";\r\n//     // let newAdd = cloneCardDiv.children[2];\r\n//     // newAdd.style.display = \"none\";\r\n//     // newestForm.reset();\r\n//     event.preventDefault();\r\n\r\n//   });\r\n// });\r\n\r\nnewBoard.addEventListener('click', function (event) {\r\n  var newColumn = cardColumnCopy.cloneNode(true);\r\n  newColumn.style.display = \"block\";\r\n  noWrap.insertBefore(newColumn, newBoard);\r\n});\r\n\r\n//drag function\r\nnoWrap.addEventListener('dragstart', function (ev) {\r\n  ev = ev || event;\r\n  var target = ev.target || ev.srcElement;\r\n  if (target.className === \"conceal_Card\") {\r\n    // setTimeout(() => {\r\n    //   target.style.display = \"none\";\r\n    // }, 0);\r\n    target.addEventListener(\"dragend\", function () {\r\n      dragTask = null;\r\n      // setTimeout(() => {\r\n      //   target.style.display = \"block\";\r\n      // }, 0);\r\n    });\r\n    var cardColumnAll = noWrap.querySelectorAll('.card_Column');\r\n    cardColumnAll.forEach((cardColumnAll) => {\r\n      cardColumnAll.addEventListener(\"dragover\", dragOver);\r\n      cardColumnAll.addEventListener(\"dragenter\", dragEnter);\r\n      cardColumnAll.addEventListener(\"dragleave\", dragLeave);\r\n      cardColumnAll.addEventListener(\"drop\", function () {\r\n      cardColumnAll.insertBefore(target, cardColumnAll.lastElementChild);\r\n      });\r\n    });\r\n  }\r\n});\r\n\r\n//   let cardInformation = noWrap.querySelectorAll('.card_Information');\r\n//   cardInformation.forEach((cardInformation) => {\r\n//     cardInformation.addEventListener(\"dragstart\", dragStart);\r\n//     cardInformation.addEventListener(\"dragend\", dragEnd);\r\n//   });\r\n//   let cardColumnAll=noWrap.querySelectorAll('.card_Column');\r\n//   cardColumnAll.forEach((cardColumnAll) => {\r\n//   cardColumnAll.addEventListener(\"dragover\", dragOver);\r\n//   cardColumnAll.addEventListener(\"dragenter\", dragEnter);\r\n//   cardColumnAll.addEventListener(\"dragleave\", dragLeave);\r\n//   cardColumnAll.addEventListener(\"drop\", dragDrop);\r\n// });\r\n\r\n\r\n// });\r\n\r\n\r\n// function dragStart() {\r\n//   dragTask = this;\r\n//   console.log(\"dragStart\");\r\n// }\r\n\r\n// function dragEnd() {\r\n//   dragTask = null;\r\n//   console.log(\"dragEnd\");\r\n// }\r\n\r\n\r\nfunction dragOver(e) {\r\n  e.preventDefault();\r\n  console.log(\"dragOver\");\r\n}\r\n\r\n function dragEnter() {\r\n   console.log(\"dragEnter\");\r\n }\r\n\r\n function dragLeave() {\r\n   console.log(\"dragLeave\");\r\n}\r\n\r\n// function dragDrop() {\r\n//   this.appendChild(dragTask);\r\n//   console.log(\"dragDrop\");\r\n// }\r\n\r\n"],"names":[],"version":3,"file":"kanban_Board.50ef519a.js.map","sourceRoot":"/__parcel_source_root/"}